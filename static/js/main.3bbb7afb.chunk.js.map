{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/logo.png"],"names":["module","exports","CardElement","value","cases","lastUpdate","text","name","desc","Grid","item","component","Card","xs","md","className","cx","styles","card","toLowerCase","CardContent","Typography","color","gutterBottom","varaint","start","end","duration","separator","Date","toDateString","variant","Cards","data","confirmed","recovered","deaths","container","spacing","justify","url","fetchData","country","a","changableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","BarChar","options","legend","display","title","CountryPicker","handleCountryChange","setCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","logo","alt","image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bbb7afb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__qplRq\",\"card\":\"Cards_card__1QeMd\",\"infected\":\"Cards_infected__2tIjH\",\"recovered\":\"Cards_recovered__1Vlxa\",\"deaths\":\"Cards_deaths__2Ohm9\",\"title\":\"Cards_title__25z5s\"};","import React from 'react';\r\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './../Cards.module.css';\r\n\r\n\r\nfunction CardElement ({cases: {value}, lastUpdate, text: {name, desc}}) {\r\n\r\n    return (\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles[name.toLowerCase()])}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    {name}\r\n                </Typography>\r\n                <Typography varaint=\"h5\">\r\n                    <CountUp start={0} end={value} duration={2} separator=\",\" />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">{desc}</Typography>\r\n            </CardContent>\r\n\t</Grid>\r\n    )\r\n}\r\n\r\nexport default CardElement;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport CardElement from './Card/Card';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\tif (!confirmed) {\r\n\t\treturn 'Loading...';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<CardElement\r\n\t\t\t\t\tcases={confirmed}\r\n\t\t\t\t\tlastUpdate={lastUpdate}\r\n\t\t\t\t\ttext={{ name: 'Infected', desc: 'Number of active cases of COVID-19' }}\r\n\t\t\t\t/>\r\n\t\t\t\t<CardElement\r\n\t\t\t\t\tcases={recovered}\r\n\t\t\t\t\tlastUpdate={lastUpdate}\r\n\t\t\t\t\ttext={{ name: 'Recovered', desc: 'Number of recovered from COVID-19' }}\r\n\t\t\t\t/>\r\n\t\t\t\t<CardElement\r\n\t\t\t\t\tcases={deaths}\r\n\t\t\t\t\tlastUpdate={lastUpdate}\r\n\t\t\t\t\ttext={{ name: 'Deaths', desc: 'Number of deaths caused by COVID-19' }}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet changableUrl = url;\r\n\tif (country) {\r\n\t\tchangableUrl = `${url}/countries/${country}`;\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changableUrl);\r\n\r\n\t\tconst modifiedData = {\r\n\t\t\tconfirmed,\r\n\t\t\trecovered,\r\n\t\t\tdeaths,\r\n\t\t\tlastUpdate\r\n\t\t};\r\n\r\n\t\treturn modifiedData;\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\r\n\t\tconst modifiedData = data.map((dailyData) => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate\r\n\t\t}));\r\n\r\n\t\treturn modifiedData;\r\n\t} catch (erorr) {\r\n\t\tconsole.log(erorr);\r\n\t}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n\t\treturn countries.map((country) => country.name);\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n\tconst [ dailyData, setDailyData ] = useState([]);\r\n\r\n\tconsole.log(country);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t};\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\tconst lineChart = dailyData.length ? (\r\n\t\t<Line\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\t\tfill: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\r\n\t\t\t\t\t\tlabel: 'Deaths',\r\n\t\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255, 0,0,0.5)',\r\n\t\t\t\t\t\tfill: true\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\tconst BarChar = confirmed ? (\r\n\t\t<Bar\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: [ 'Infected', 'Recovered', 'Deaths' ],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'People',\r\n\t\t\t\t\t\tbackgroundColor: [ 'rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)' ],\r\n\t\t\t\t\t\tdata: [ confirmed.value, recovered.value, deaths.value ]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\ttitle: { display: true, text: `${country}` }\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\treturn <div className={styles.container}>{country ? BarChar : lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\tconst [ countries, setCountries ] = useState([]);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst fetchAPI = async () => {\r\n\t\t\t\tsetCountries(await fetchCountries());\r\n\t\t\t};\r\n\r\n\t\t\tfetchAPI();\r\n\t\t},\r\n\t\t[ setCountries ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<FormControl className={styles.FormControl}>\r\n\t\t\t<NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{countries.map((country, i) => (\r\n\t\t\t\t\t<option value={country} key={i}>\r\n\t\t\t\t\t\t{country}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\nimport styles from './App.module.css';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport { fetchData } from './api';\r\nimport logo from './images/logo.png';\r\n\r\nclass App extends React.Component {\r\n\tstate = {\r\n\t\tdata: {},\r\n\t\tcountry: ''\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst fetchedData = await fetchData();\r\n\t\tthis.setState({ data: fetchedData });\r\n\t}\r\n\r\n\thandleCountryChange = async (country) => {\r\n\t\tconst fetchedData = await fetchData(country);\r\n\r\n\t\tthis.setState({ data: fetchedData, country: country });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { data, country } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t<img src={logo} alt=\"Logo\" className={styles.image} />\r\n\t\t\t\t<Cards data={data} />\r\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\r\n\t\t\t\t<Chart data={data} country={country} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__7OkB1\",\"image\":\"App_image__46U0U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1oQ8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"CountryPicker_FormControl__2QBpu\"};","module.exports = __webpack_public_path__ + \"static/media/logo.d7265326.png\";"],"sourceRoot":""}